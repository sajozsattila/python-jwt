From 477208c80911a7e498c1015c4a4da9bf05e4c2d4 Mon Sep 17 00:00:00 2001
From: Castix <vincenzo.castiglia@axant.it>
Date: Wed, 16 Dec 2020 11:23:36 +0100
Subject: [PATCH 07/16] forwarded options to the user ; removed the need of
 default_backend vy upgrading cryphography to minimum 3.1

---
 gjwt/jwk.py | 17 +++++++++++++----
 setup.py   |  2 +-
 2 files changed, 14 insertions(+), 5 deletions(-)

diff --git a/gjwt/jwk.py b/gjwt/jwk.py
index 044263b..312aca0 100644
--- a/gjwt/jwk.py
+++ b/gjwt/jwk.py
@@ -301,8 +301,8 @@ def jwk_from_bytes_argument_conversion(func):
                 kwargs.get(load_function),
             )
 
-        if kwargs.get('backend') is None:
-            kwargs['backend'] = default_backend()
+        if kwargs.get('options') is None:
+            kwargs['options'] = {}
 
         return func(content, **kwargs)
     return wrapper
@@ -316,6 +316,7 @@ def jwk_from_private_bytes(
         Union[str, Callable[[bytes, Optional[str], object], object]] = None,
     password: Optional[str] = None,
     backend: Optional[object] = None,
+    options: Optional[dict] = None,
 ) -> Optional[AbstractJWKBase]:
     """This function is meant to be called from jwk_from_bytes"""
     try:
@@ -325,7 +326,7 @@ def jwk_from_private_bytes(
             backend=backend,
         )
         if isinstance(privkey, RSAPrivateKey):
-            return RSAJWK(privkey)
+            return RSAJWK(privkey, **options)
         raise UnsupportedKeyTypeError('unsupported key type')
     except ValueError:
         return None
@@ -338,6 +339,7 @@ def jwk_from_public_bytes(
     serializer_load_function_public:
         Union[str, Callable[[bytes, Optional[str], object], object]] = None,
     backend: Optional[object] = None,
+    options: Optional[dict] = None
 ) -> Optional[AbstractJWKBase]:
     """This function is meant to be called from jwk_from_bytes"""
     try:
@@ -346,7 +348,7 @@ def jwk_from_public_bytes(
             backend=backend,
         )
         if isinstance(pubkey, RSAPublicKey):
-            return RSAJWK(pubkey)
+            return RSAJWK(pubkey, **options)
         raise UnsupportedKeyTypeError(
             'unsupported key type')  # pragma: no cover
     except ValueError as why:
@@ -362,12 +364,14 @@ def jwk_from_bytes(
         Union[str, Callable[[bytes, Optional[str], object], object]] = None,
     private_password: Optional[str] = None,
     backend: Optional[object] = None,
+    options: Optional[dict] = None,
 ) -> AbstractJWKBase:
     privkey = jwk_from_private_bytes(
         content,
         serializer_load_function_private=serializer_load_function_private,
         password=private_password,
         backend=backend,
+        options=options,
     )
     if privkey is not None:
         return privkey
@@ -376,12 +380,14 @@ def jwk_from_bytes(
         content,
         serializer_load_function_public=serializer_load_function_public,
         backend=backend,
+        options=options,
     )
 
 
 def jwk_from_pem(
     pem_content: bytes,
     private_password: Optional[str] = None,
+    options: Optional[dict] = None,
 ) -> AbstractJWKBase:
     return jwk_from_bytes(
         pem_content,
@@ -389,12 +395,14 @@ def jwk_from_pem(
         serializer_load_function_public='load_pem_public_key',
         private_password=private_password,
         backend=None,
+        options=options,
     )
 
 
 def jwk_from_der(
     der_content: bytes,
     private_password: Optional[str] = None,
+    options: Optional[dict] = None,
 ) -> AbstractJWKBase:
     return jwk_from_bytes(
         der_content,
@@ -402,4 +410,5 @@ def jwk_from_der(
         serializer_load_function_public='load_der_public_key',
         private_password=private_password,
         backend=None,
+        options=options,
     )
diff --git a/setup.py b/setup.py
index 391965c..452f67e 100644
--- a/setup.py
+++ b/setup.py
@@ -24,7 +24,7 @@ from setuptools import (
 
 here = os.path.dirname(__file__)
 requires = [
-    'cryptography > 2.9.2, <= 3.2.1',
+    'cryptography > 3.1, <= 3.3.1',
 ]
 
 
-- 
2.25.1

